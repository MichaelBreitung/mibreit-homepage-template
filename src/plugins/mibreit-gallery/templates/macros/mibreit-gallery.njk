{#
# All macros in this file are designed to work with the mibreit-gallery-ts javascript gallery. They
# can be used to create php markup for loading images from an accompanying gallery.xml file
# which must be loaced in the same folder as the page that uses these macros.
#
# @attention All macros below only work in php layouts
#
# Example for gallery.xml

  <?xml version="1.0" encoding="UTF-8"?>
  <MibreitGallery imagePath="path to large images" thumbPath="path to thumbnails">
  <infoEn keywords="landscape photos" description="great landscape photos">
    <header_h1>Some header for the gallery pages</header_h1>
    <content_title>Some title for the gallery pages</content_title>
  </infoEn>
  <infoDe .... same as for en, just german </infoDe>
  <images>
    <image>
    <filename>some-image.jpg</filename>
    <caption>title</caption>
    <alt>alt description</alt>
    <altDe>german alt description</altDe>
    </image>
  </images>
  </MibreitGallery>

#}

{# prepares has to be called before any of the other macros #}
{% macro prepare(baseUrl) %}
<?php
    $language = "en";
    if (isset($_GET['lan'])) 
    {
      $language = $_GET['lan'];
      if (strlen($language) > 2)
      {
        header('Location: {{baseUrl}}/errors/error400.html');
        exit();
      }
    }
    $imageNr = 0;
    if (isset($_GET['imageNr'])) 
    {
      $imageNr = $_GET['imageNr'];
      if (strlen($imageNr) > 2)
      {
        header('Location: {{baseUrl}}/errors/error400.html');
        exit();
      }
    }

    require $_SERVER['DOCUMENT_ROOT'] . '/scripts/mibreit-gallery/mibreit-gallery.php';
    require $_SERVER['DOCUMENT_ROOT'] . '/scripts/mibreit-gallery/mibreit-gallery-helpers.php';
    $mibreitGallery = new MibreitGalleryDataParser('gallery.xml');
    $mibreitGalleryPageData = new MibreitGalleryPageData();   
    if ($mibreitGallery->getNumberImages())
    {
      $page_image = $mibreitGalleryPageData->getAbsoluteBaseUrl() . $mibreitGallery->getImage($imageNr)->imageUrl;
    }
    else 
    {
      $page_image = "";
    }
  ?>
{% endmacro %}

{#
# Create an array of images from the image set in random order.
# The array is then called $randomImages.
#}
{% macro randomImages(number) %}
  <?php
    $randomImages = $mibreitGallery->getRandomImages(8);
  ?>
{% endmacro %}

{#
# inserts slideshow container with php markup
# @param container - class name for container
# @param de - if given, german version is generated (optional)
# @attention requires call to prepare() beforehand
#}
{% macro slideshow(container, de) %}
  <div class="{{container}}">
  <?php
    $images = [];
    if (isset($randomImages))
    {
      $images = $randomImages;
    }
    else
    {
      $images =  $mibreitGallery->getImages(); 
    }
    $nrImages = count($images);
    for ($i = 0; $i < $nrImages; $i++)
    {
      $image = $images[$i];     
      {{_figure("image", de)}}
    }
  ?>
  </div>
{% endmacro %}

{#
# inserts gallery container with php markup
# @param container - class name for container
# @param de - if given, german version is generated (optional)
# @attention requires call to prepare() beforehand
#}
{% macro gallery(container, de, old_lazy) %}
  <div class="{{container}}">
    <?php
    $nrImages = $mibreitGallery->getNumberImages();
    for ($i = 0; $i < $nrImages; $i++)
    {
      $image = $mibreitGallery->getImage($i);
      {{_figure("image", de, old_lazy)}}
    }
  ?>
  </div>
{% endmacro %}

{# private macro that should only be used internally within a php tag to create the figure markup #}
{% macro _figure(item, de, old_lazy) %}
  $size = getimagesize(${{item}}->imageUrl); 
  echo "<figure>";
    {{_image(item, de, false, old_lazy)}}
    {{_image(item, de, true)}}
    {% if de %}
      echo "<figcaption><p>${{item}}->altDe</p></figcaption>";
    {% else %}
      echo "<figcaption><p>${{item}}->altEn</p></figcaption>";
    {% endif %}
    echo "</figure>\n";
{% endmacro %}

{# private macro that should only be used internally within a php tag to create the image markup #}
{% macro _image(item, de, no_script, old_lazy) %}
  {% if no_script %}
    echo "<noscript><img src=\"" . ${{item}}->imageUrl . "\" style=\"position: absolute;\" ";
    {% else %}
      {% if old_lazy %}
        echo "<img src=\"/scripts/mibreit-gallery/images/image-placeholder-transparent.png\" style=\"position: absolute;\" ";
    echo "data-src=\"" . ${{item}}->imageUrl . "\" ";
      {% else %}
        echo "<img loading=\"lazy\" class=\"mibreit-LazyLoader_lazy\" style=\"position: absolute;\" ";
    echo "src=\"" . ${{item}}->imageUrl . "\" ";
      {% endif %}
    {% endif %}
    echo "title=\""    . ${{item}}->caption  . "\" ";
    {% if not no_script %}
      echo "alt=\""      . {% if de %}${{item}}->altDe{% else %}${{item}}->altEn{% endif %} . "\" ";
    {% endif %}
    echo "width=\""    . $size[0]         ."\" ";
    echo "height=\""   . $size[1]         ."\" >";
    {% if no_script %}
      echo "</noscript>";
  {% endif %}
{% endmacro %}

{#
# inserts thumbview container with php markup
# @param container - class name for container
# @attention requires call to prepare() beforehand
#}
{% macro thumbview(container, old_lazy) %}
  <div class="{{container}}">
  <?php
    foreach ($mibreitGallery->getImages() as $image)
    {
      $size = getimagesize($image->thumbUrl);   
      {% if old_lazy %}   
      echo "<img src=\"/scripts/mibreit-gallery/images/image-placeholder-transparent.png\" style=\"position: absolute;\" data-src=\"" . $image->thumbUrl . "\" ";
      {% else %}
      echo "<img loading=\"lazy\" class=\"mibreit-LazyLoader_lazy\" style=\"position: absolute;\" src=\"" . $image->thumbUrl . "\" ";
      {% endif %}
      echo "width=\"". $size[0] ."\" height=\"". $size[1] . "\" alt=\"thumbnail\" >\n";      
    }
  ?>
  </div>
{% endmacro %}

{#
# inserts title container with php markup
# @param class_name - class that is applied to title
# @param de - if given, german version is generated (optional)
# @attention requires call to prepare() beforehand
#}
{% macro imageTitle(class_name, de) %}
  {% if de %}
    <h2 class="{{class_name}}"><?php echo $mibreitGallery->getInfoDe()->header_h1; ?></h2>
  {% else %}
    <h2 class="{{class_name}}"><?php echo $mibreitGallery->getInfoEn()->header_h1; ?></h2>
  {% endif %}
{% endmacro %}

{#
# inserts gallery info
# @param de - if given, german version is generated (optional)
# @attention requires call to prepare() beforehand
#}
{% macro galleryInfo(de) %}
  {% if de %}
    <?php if (!empty($mibreitGallery->getInfoDe()->content)) { ?>
    <h2>Galerie Information</h2>
    <p><?php echo str_replace('\n', '</p><p>', $mibreitGallery->getInfoDe()->content); ?></p>
    <?php } ?>
  {% else %}
    <?php if (!empty($mibreitGallery->getInfoEn()->content)) { ?>
    <h2>Gallery Info</h2>
    <p><?php echo str_replace('\n', '</p><p>', $mibreitGallery->getInfoEn()->content); ?></p>
    <?php } ?>
  {% endif %}
{% endmacro %}

{#
# inserts script for slideshow
# @param container - class or id name for container of slideshow -> starting with a . or #
# @param omit_script_include - it is possible to place multiple slideshows on one page. If you do so, you only need the slideshow include once. Use this flag whenever you want to omit the inclusion of the script. Typically you will just include it in your first call to this macro
# @param stretch - if true scale mode STRETCH will be applied to images, if false FITASPECT
# @param zoom - if provided and set to value != 100, zoom animation will be applied
#}
{% macro scriptSlideshow(container, omit_script_include, stretch, zoom) %}
  {% if not omit_script_include %}
    <script src="/scripts/mibreit-gallery/mibreit-gallery.min.js"></script>
  {% endif %}
  <script>
    window.addEventListener('load',function () {
      mibreitSlideshowSetup("{{container}}", {% if stretch %}mibreitGalleryTs.EImageScaleMode.EXPAND{% else %}mibreitGalleryTs.EImageScaleMode.FIT_ASPECT{% endif %}, {% if zoom %}true{% else %}false{% endif %});
    });
  </script>
{% endmacro %}

{#
# inserts script for simple gallery without title and thumbs
# @param container - class or id name for container of slideshow -> starting with a . or #
# @param gallery_var_name - the global javascript variable name used for the gallery
#}
{% macro scriptSimpleGallery(container) %}
  <script src="/scripts/mibreit-gallery/mibreit-gallery.min.js"></script>
  <script>
    window.addEventListener('load',function () {
      mibreitGallerySetupSimple('{{container}}');
    });
  </script>
{% endmacro %}

{#
# inserts script for gallery
# @param container - class or id name for container of slideshow -> starting with a . or #
# @param thumb_container - class or id name for thumbview container of slideshow -> starting with a . or #
# @param title_class_name - class name for title -> starting with a .
# @param gallery_var_name - the global javascript variable name used for the gallery
#}
{% macro scriptGallery(container, thumb_container, title_class_name, with_prints) %}
  <script src="/scripts/mibreit-gallery/mibreit-gallery.min.js"></script>
<?php
  echo "<script>";
  echo "window.addEventListener('load',function () {\n"; 
  {% if title_class_name %}
  echo "var viewer = mibreitGallerySetup(\"{{container}}\", \"{{thumb_container}}\", \"{{title_class_name}}\").getViewer();\n";
  {% else %}
  echo "var viewer = mibreitGallerySetup(\"{{container}}\", \"{{thumb_container}}\").getViewer();\n";
  {% endif %}
  {% if with_prints %}
  echo "viewer.addImageChangedCallback(mibreitGalleryPrints(" . json_encode($mibreitGallery->getPrintInfos()) . ", viewer, " . $imageNr . "))\n";
  {% endif %}
  echo "});\n";
  echo "</script>";
?>
{% endmacro %}

{#
# inserts script for woocommerce gallery 
#}
{% macro scriptGalleryWoo(container, thumb_container) %}
  <script src="/scripts/mibreit-gallery/mibreit-gallery.min.js"></script>
  <script>
    window.addEventListener('load',function () {
      mibreitGallerySetupWoo('{{container}}', '{{thumb_container}}');
    });
  </script>
{% endmacro %}

{#
# inserts script for gallery in Wordpress layouts
#}
{% macro scriptGalleryWP() %}
  <script src="/scripts/mibreit-gallery/mibreit-gallery.min.js"></script>
  <script>
    window.addEventListener('load', function () {
      mibreitGallerySetupWP("article > div > img");
    });
  </script>
{% endmacro %}
